@model TechForum.Web.ViewModels.Posts.PostViewModel
@using TechForum.Web.ViewModels.Posts
@using System.Text.Json.Serialization
@{

    this.ViewData["Title"] = Model.Title;

    void DisplayComments(int? parentId)
    {

        var comments = this.Model.Comments.Where(x => x.ParentId == parentId);
        if (!comments.Any())
        {
            return;
        }
        @foreach (var comment in comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="@comment.AuthorPicture" width="50  " class="d-block ui-w-40 fa-reddit-square" alt="">
                                    <div class="media-body ml-3">
                                        @comment.AuthorUserName
                                        <div class="text-muted small">
                                            <time datetime="@comment.CreatedOn.ToString("O")"></time>
                                        </div>
                                    </div>
                                    <div class="btn-group-vertical">
                                        @if (this.User.Identity.IsAuthenticated)
                                        {
                                            <button type="button" class="btn btn-light" onclick="showCommentForm(@comment.Id)"><i class="fa fa-comment"></i>&nbsp; Reply</button>
                                        }
                                        @if ((this.User.Identity.Name == Model.AuthorUserName) || (comment.AuthorUserName == this.User.Identity.Name))
                                        {
                                            if (comment.AuthorUserName == this.User.Identity.Name)
                                            {
                                                <button type="button" class="btn btn-light" onclick="showEditCommentForm(@comment.Id,@Json.Serialize(comment).ToString())"><i class="fa fa-comment"></i>&nbsp; Edit</button>
                                            }


                                            <a href='@Url.Action("Delete", "Comments", new { Id = comment.Id, PostId = Model.Id, ParentId = comment.ParentId, AuthorUserName = comment.AuthorUserName, PostAuthorUserName = Model.AuthorUserName} )'>

                                                <button type="submit" id="deleteComment" class="btn btn-light"><i class="fa fa-eraser"></i>&nbsp; Delete</button>
                                            </a>

                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <article>
                                    @Html.Raw(comment.SanitizedContent)
                                </article>
                                @{ DisplayComments(comment.Id); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}
<div>
    <br />
    <a href="/c/@Model.Category.Name" class="btn btn-light"><strong>@Model.Category.Name</strong></a>
    <div class="align-center"><h1> @Model.Title</h1></div>
</div>

<div class="container-fluid mt-100">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="@Model.AuthorPicture" width="50  " class="d-block ui-w-40 fa-reddit-square" alt="">
                        <div class="media-body ml-3">
                            <a href='@Url.Action("Profile", "Users", new { userName = Model.AuthorUserName} )'>@Model.AuthorUserName</a>
                            <div class="text-muted small">
                                <time datetime="@Model.CreatedOn.ToString("O")"></time>
                            </div>
                        </div>
                        <div class="text-muted small ml-3">
                            <form id="votesForm" method="post"></form>
                            <div>
                                <a href="#" onclick="sendVote(@Model.Id, true)">
                                    <i class="fas fa-chevron-up"></i>
                                </a>
                            </div>


                            <div id="count">@Model.VotesCount</div>
                            <a href="#" onclick="sendVote(@Model.Id, false)">
                                <div><i class="fas fa-chevron-down"></i></div>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <article>
                        @Html.Raw(Model.SanitizedContent)

                        @{DisplayComments(null);}
                    </article>
                </div>

                <form class="btn-group btn-group-vertical" asp-area="" asp-controller="Posts" asp-action="Edit">
                    <input type="hidden" name="Title" value="@Model.Title" />
                    <input type="hidden" name="Content" value="@Model.Content" />
                    <input type="hidden" name="CategoryId" value="@Model.CategoryId" />
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="AuthorUserName" value="@Model.AuthorUserName" />
                    <button type="button" class="btn btn-light " onclick="showCommentForm(0)" style="margin-left: -0px"><i class="fa fa-comment"></i>&nbsp; Comment</button>
                    @if (this.User.Identity.Name == Model.AuthorUserName)
                    {<button type="submit" class="btn btn-light " style="margin-left: -0px"><i class="fa fa-edit"></i>&nbsp; Edit post</button>}
                </form>
                @if (this.User.Identity.Name == Model.AuthorUserName)
                {
                    <button type="button" class="btn btn-light " style="margin-left: -0px" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-eraser"></i>&nbsp; Delete post</button>
                }



            </div>
        </div>
    </div>
</div>
<div>

    <form asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="PostId" value="@this.Model.Id" />
        <input type="hidden" name="ParentId" value="0" />

        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add Comment" />
        </div>
    </form>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this post ?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form class="btn-group btn-group-vertical" asp-area="" asp-controller="Posts" asp-action="Delete">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="CategoryId" value="@Model.Category.Id" />
                    <input type="hidden" name="AuthorUserName" value="@Model.AuthorUserName" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                    <div class="clearfix"></div>
                </form>

            </div>
        </div>
    </div>
</div>
<div>

    <form asp-controller="Comments" asp-action="Edit" method="post" id="EditCommentForm" style="display: none">
        <input type="hidden" name="PostId" value="@this.Model.Id" />
        <input type="hidden" asp-for="Id" name="Id" />
        <input type="hidden" name="AuthorUserName" value="@Model.AuthorUserName" />

        <div>
            <label for="Content"></label>
            <textarea asp-for="Content" name="Content" id="ContentToEdit" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Edit Comment" />
        </div>
    </form>

</div>

@section Scripts
{
    <script>

        function showCommentForm(parentId) {
            $("#AddCommentForm input[name='ParentId']").val(parentId);
            $("#AddCommentForm").toggle();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);

        }
    </script>
    <script>
        function showEditCommentForm(commentId, content) {

            var sanitizedContent = content.sanitizedContent
            $("#EditCommentForm input[name='Id']").val(commentId);
            tinymce.get('ContentToEdit').setContent(sanitizedContent);
            $("#EditCommentForm").toggle();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#EditCommentForm").offset().top
            }, 1000);

        }

    </script>

    <script>
        function sendVote(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = {
                postId: postId, isUpVote: isUpVote, __RequestVerificationToken: token
            }

            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { "X-CSRF-TOKEN": token },
                success: function (data) {
                    $("#count").html(data.votesCount);

                }
            })
        }
    </script>


    <script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            plugins: [
                "image paste table link code media"
            ]
        });
    </script>

}
